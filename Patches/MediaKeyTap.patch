diff --git a/MediaKeyTap/MediaKeyTapInternals.swift b/MediaKeyTap/MediaKeyTapInternals.swift
index dc8b882..813cf66 100644
--- a/MediaKeyTap/MediaKeyTapInternals.swift
+++ b/MediaKeyTap/MediaKeyTapInternals.swift
@@ -25,6 +25,14 @@ extension EventTapError: CustomStringConvertible {
   }
 }
 
+func mainScreen() -> NSScreen? {
+  let mouseLocation = NSEvent.mouseLocation
+  let screens = NSScreen.screens
+  let screenWithMouse = (screens.first { NSMouseInRect(mouseLocation, $0.frame, false) })
+
+  return screenWithMouse
+}
+
 protocol MediaKeyTapInternalsDelegate {
   var keysToWatch: [MediaKey] { get set }
   var observeBuiltIn: Bool { get set }
@@ -99,7 +107,7 @@ class MediaKeyTapInternals {
       guard let mediaKey = MediaKeyTap.functionKeyCodeToMediaKey(Int32(keycode)) else { return event }
       if self.delegate?.keysToWatch.contains(mediaKey) ?? false {
         if self.delegate?.observeBuiltIn ?? true == false {
-          if let id = NSScreen.main?.deviceDescription[NSDeviceDescriptionKey("NSScreenNumber")] as? CGDirectDisplayID {
+          if let id = mainScreen()?.deviceDescription[NSDeviceDescriptionKey("NSScreenNumber")] as? CGDirectDisplayID {
             if CGDisplayIsBuiltin(id) != 0 {
               return event
             }
@@ -123,7 +131,7 @@ class MediaKeyTapInternals {
       else { return event }
 
       if self.delegate?.observeBuiltIn ?? true == false {
-        if let id = NSScreen.main?.deviceDescription[NSDeviceDescriptionKey("NSScreenNumber")] as? CGDirectDisplayID {
+        if let id = mainScreen()?.deviceDescription[NSDeviceDescriptionKey("NSScreenNumber")] as? CGDirectDisplayID {
           if CGDisplayIsBuiltin(id) != 0 {
             return event
           }
