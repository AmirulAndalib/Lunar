<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "AdaptiveMode.interpolateSIMD(_:display:minVal:maxVal:offset:userValues:):AdaptiveMode.swift">
      </ContextState>
      <ContextState
         contextName = "BrightnessContrastChartView.setup(mode:):BrightnessContrastChartView.swift">
         <PersistentStrings>
            <PersistentString
               value = "brightnessGraph.entries.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HotKeyCenter.register(with:):HotKeyCenter.swift">
         <PersistentStrings>
            <PersistentString
               value = "hotKeyCount">
            </PersistentString>
            <PersistentString
               value = "hotKeys.keys">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "BrightnessContrastChartView.highlightCurrentValues(adaptiveMode:for:):BrightnessContrastChartView.swift">
      </ContextState>
      <ContextState
         contextName = "static RelativeFormatter.suitableFlavour(inList:forLocale:):RelativeFormatter.swift">
      </ContextState>
      <ContextState
         contextName = "AdaptiveMode.interpolate(_:display:offset:):AdaptiveMode.swift">
      </ContextState>
      <ContextState
         contextName = "static ParsableArguments.exit(withError:):ParsableArguments.swift">
      </ContextState>
      <ContextState
         contextName = "main:AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "NSScreen.screens">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DisplayViewController.display.didset:DisplayViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "display.id == GENERIC_DISPLAY_ID">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HotkeyView.recordView(_:didChangeKeyCombo:):HotKeyView.swift">
      </ContextState>
      <ContextState
         contextName = "mapNumberSIMD(_:fromLow:fromHigh:toLow:toHigh:):Util.swift">
      </ContextState>
      <ContextState
         contextName = "DisplayViewController.initHotkeys():DisplayViewController.swift">
      </ContextState>
      <ContextState
         contextName = "BrightnessContrastChartView.setupLimitLines(_:):BrightnessContrastChartView.swift">
      </ContextState>
      <ContextState
         contextName = "HotkeyButton.mouseDown(with:):HotkeyButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "popoverController?.hotkeyView?.hotkey?.identifier">
            </PersistentString>
            <PersistentString
               value = "hotkey!.identifier">
            </PersistentString>
            <PersistentString
               value = "popoverController!.dropdown.itemTitles">
            </PersistentString>
            <PersistentString
               value = "popoverController?.hotkeyView?.hotkey?.isEnabled">
            </PersistentString>
            <PersistentString
               value = "_popover == nil">
            </PersistentString>
            <PersistentString
               value = "popoverController?.hotkeyView?.hotkey?.hotkey.hotKeyId">
            </PersistentString>
            <PersistentString
               value = "popoverController?.hotkeyView?.hotkey?.hotkey.hotKeyRef">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DisplayViewController.update(_:):DisplayViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "display.id">
            </PersistentString>
            <PersistentString
               value = "GENERIC_DISPLAY_ID">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DisplayViewController.initHotkeys(from:):DisplayViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "display.serial">
            </PersistentString>
            <PersistentString
               value = "display.name">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ToggleButton.labelColor.getter:ToggleButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "title">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Display.addObservers():Display.swift">
      </ContextState>
      <ContextState
         contextName = "AdaptiveModeButton.setAutoModeItemTitle(modeKey:):AdaptiveModeButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "modeKey.str">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static Hotkey.setKeyEquivalent(_:menuItem:hotkeys:):Hotkeys.swift">
         <PersistentStrings>
            <PersistentString
               value = "&quot;\(modifierChars)\(keyChar)&quot;">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.adaptToScreenConfiguration(notification:):AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "notification.name">
            </PersistentString>
            <PersistentString
               value = "notification.userInfo">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #5 in DisplayViewController.initHotkeys(from:):DisplayViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "$0.identifier">
            </PersistentString>
            <PersistentString
               value = "$0.isEnabled">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AdaptiveModeButton.update(modeKey:):AdaptiveModeButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.lastItem?.attributedTitle?.string">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static RelativeFormatter.format(date:to:style:locale:):RelativeFormatter.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
