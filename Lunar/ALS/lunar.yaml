substitutions:
  ssid: Wifi
  password: password
  board: board
  platform: platform
  platform_version: platform_version
  sda: sda
  scl: scl

esphome:
  name: lunarsensor
  platform: $platform
  board: $board
  includes:
    - tsl2591.h
  libraries:
    - "Adafruit TSL2591 Library"
    - https://github.com/blackhack/ESPAsyncWebServer
    - SPI
  platformio_options:
    platform: $platform_version
wifi:
  ssid: $ssid
  password: $password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lunar Sensor Hotspot"
    password: "lunarals23"

captive_portal:

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API
api:
  reboot_timeout: 0s

ota:

sensor:
  - platform: custom
    lambda: |-
      auto sensor = new Tsl2591();
      App.register_component(sensor);
      return {sensor};
    sensors:
      name: "Ambient Light TSL2591"
      id: ambient_light_tsl2591
      filters:
        - filter_out: 65535
        - filter_out: nan
        - sliding_window_moving_average:
            window_size: 15
            send_every: 2
            send_first_at: 2

  - platform: tsl2561
    name: "Ambient Light TSL2561"
    id: ambient_light_tsl2561
    update_interval: 1s
    gain: 1x
    filters:
      - filter_out: 65535
      - filter_out: nan
      - sliding_window_moving_average:
          window_size: 15
          send_every: 2
          send_first_at: 2
    on_raw_value:
      then:
        - lambda: |-
            if (isnan(x)) {
              id(ambient_light_tsl2561).set_gain(esphome::tsl2561::TSL2561_GAIN_1X);
              id(ambient_light_tsl2561).set_integration_time(esphome::tsl2561::TSL2561_INTEGRATION_14MS);
            } else if (x < 30) {
              id(ambient_light_tsl2561).set_gain(esphome::tsl2561::TSL2561_GAIN_16X);
              id(ambient_light_tsl2561).set_integration_time(esphome::tsl2561::TSL2561_INTEGRATION_402MS);
            } else if (x > 30000) {
              id(ambient_light_tsl2561).set_gain(esphome::tsl2561::TSL2561_GAIN_1X);
              id(ambient_light_tsl2561).set_integration_time(esphome::tsl2561::TSL2561_INTEGRATION_14MS);
            } else if (x > 400) {
              id(ambient_light_tsl2561).set_gain(esphome::tsl2561::TSL2561_GAIN_1X);
              id(ambient_light_tsl2561).set_integration_time(esphome::tsl2561::TSL2561_INTEGRATION_101MS);
            } else {
              id(ambient_light_tsl2561).set_gain(esphome::tsl2561::TSL2561_GAIN_1X);
              id(ambient_light_tsl2561).set_integration_time(esphome::tsl2561::TSL2561_INTEGRATION_402MS);
            }

i2c:
  sda: $sda
  scl: $scl
  scan: False
  id: bus_a

web_server:
  port: 80
